{"version":3,"sources":["services/Uploader.ts"],"names":["Uploader","Uploader.upload","Uploader.getFileData","Uploader.getFileData.frOnError"],"mappings":"AAAA,uDAAuD;AACvD,iEAAiE;AAEjE,CAAC;IACC,OAAO,CACJ,MAAM,CAAC,qBAAqB,CAAC,CAC7B,OAAO,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAEjC,QAAQ,CAAC,OAAO,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAEnC,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAE;QACzBA,MAAMA,CAACA;YACLA,MAAMA,EAAEA,MAAMA;YACdA,WAAWA,EAAEA,WAAWA;SACzBA,CAACA;QAEFA,SAASA,MAAMA,CAACA,IAAIA;YAClBC,MAAMA,CAACA,KAAKA,CAACA,IAAIA,CAACA,aAAaA,EAAEA,IAAIA,EAAEA;gBACrCA,gBAAgBA,EAAEA,OAAOA,CAACA,QAAQA;gBAClCA,OAAOA,EAAEA;oBACPA,cAAcA,EAAEA,SAASA;iBAC1BA;aACFA,CAACA,CAACA;QACLA,CAACA;QAEDD,SAASA,WAAWA,CAACA,IAAIA;YACvBE,IAAIA,QAAQA,GAAGA,EAAEA,CAACA,KAAKA,EAAEA,CAACA;YAC1BA,IAAIA,EAAEA,GAAGA,IAAIA,UAAUA,EAAEA,CAACA;YAC1BA,IAAIA,SAASA,CAACA;YAEdA,EAAEA,CAACA,MAAMA,GAAGA,UAASA,CAACA;gBACpB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;gBACtB,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBAC5B,IAAI,EAAE,GAAG,IAAI,QAAQ,CAAC;gBAEtB,EAAE,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBAClC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACvB,CAAC,CAACA;YAEFA,EAAEA,CAACA,OAAOA,GAAGA,SAASA,SAASA,CAACA,CAACA;gBAC/BC,QAAQA,CAACA,MAAMA,CAACA,CAACA,CAACA,CAACA;YACrBA,CAACA,CAACD;YAEFA,EAAEA,CAACA,aAAaA,CAACA,IAAIA,CAACA,CAACA;YAEvBA,MAAMA,CAACA,QAAQA,CAACA,OAAOA,CAACA;QAC1BA,CAACA;IACHF,CAACA;AAEH,CAAC,CAAC,EAAE,CAAC","file":"services/Uploader.js","sourceRoot":"/home/soka/Workspace/vectorizer.js/","sourcesContent":["///<reference path=\"../../../tools/typings/tsd.d.ts\" />\n///<reference path=\"../../../tools/typings/typescriptApp.d.ts\" />\n\n(function() {\n  angular\n    .module('Vectorizer.services')\n    .service('Uploader', Uploader);\n\n  Uploader.$inject = ['$http', '$q'];\n\n  function Uploader($http, $q) {\n    return {\n      upload: upload,\n      getFileData: getFileData\n    };\n\n    function upload(data) {\n      return $http.post('/api/photo/', data, {\n        transformRequest: angular.identity,\n        headers: {\n          'Content-Type': undefined\n        }\n      });\n    }\n\n    function getFileData(file) {\n      var deferred = $q.defer();\n      var fr = new FileReader();\n      var imageData;\n\n      fr.onload = function(e) {\n        console.log(e.target);\n        imageData = e.target.result;\n        var fd = new FormData;\n\n        fd.append('imageData', imageData);\n        deferred.resolve(fd);\n      };\n\n      fr.onerror = function frOnError(e) {\n        deferred.reject(e);\n      };\n\n      fr.readAsDataURL(file);\n\n      return deferred.promise;\n    }\n  }\n\n})();"]}